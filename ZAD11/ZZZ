Zadanie 1:

try {
			cin >> wybor;

			if (wybor > 5 || wybor < 1)

				throw 1;
			
		}

		catch (int) {
			cout << "Blad zakresu" << endl;
		}

		catch (istream::failure) {
			cout << "Blad danych" << endl;
			cin.clear();
			cin.ignore(50, '\n');
		}
		
Zadanie 3:
przed mainfunkcja:
bool sortujPoNumerze(Produkt *pr, Produkt *pro) { return pr->numer_katalogowy < pro->numer_katalogowy; }

w mainie:
sort(produkty.begin(), produkty.end(), sortujPoNumerze );
for (size_t i = 0; i<produkty.size(); i++)
cout << produkty[i]->zwrocKategorie() << " : " << produkty[i]->numer_katalogowy << endl;

Zadanie 2:
Konstruktor klasy:

KomputerStacjonarny(int numer_katalogowy, RodzajObudowy typ_obudowy) : Komputer(numer_katalogowy), rodzaj(typ_obudowy) { }

Wyswietlanie w case 4:
		case 4:
			for (size_t i = 0; i < produkty.size(); i++) {

				if (dynamic_cast<KomputerStacjonarny*>(produkty[i]) != nullptr) {
					KomputerStacjonarny *wskaznik = dynamic_cast<KomputerStacjonarny*>(produkty[i]);
					cout << produkty[i]->zwrocKategorie() << " : " << produkty[i]->numer_katalogowy << wskaznik->zwrocRodzaj() << endl;
				}
				else
				{
				
					cout << produkty[i]->zwrocKategorie() << " : " << produkty[i]->numer_katalogowy << endl;
				}


			}

			
			break;
			Plus w KomputerStacjonarny:
				RodzajObudowy zwrocRodzaj() {
		return rodzaj;
	}

